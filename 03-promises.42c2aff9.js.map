{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQH,EAAK,GACbI,EAAOJ,EAAK,GACZK,EAASL,EAAK,GAGpBA,EAAKM,iBAAiB,UAgBtB,SAAkBC,G,kBAMdC,YAAW,WACT,IArBiBC,EAAEC,EAAUC,EAC3BC,EAoBIC,EAAS,CACbH,SAAUI,EACVC,MAAOC,OAAOb,EAAMc,QAAUH,EAAI,GAAKE,OAAOZ,EAAKa,SAvBpCR,EA4BHI,EA5BKH,EAAFD,EAAEC,SAAUC,EAAZF,EAAYM,MAC3BH,EAAgBM,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAAKC,GAC5BV,EAEFS,EAAI,CAAEX,WAAUK,MAAAJ,IAGhBW,EAAI,CAAEZ,WAAUK,MAAAJ,G,KAqBbY,MAAK,SAAAd,G,IAAGC,EAAQD,EAARC,SAAUc,EAAKf,EAALM,MACjBU,EAAA3B,GAAS4B,OAAOC,QACd,uBAAwCC,OAAflB,EAAS,QAAYkB,OAANJ,EAAM,M,IAGjDK,OAAM,SAAApB,G,IAAGC,EAAQD,EAARC,SAAUoB,EAAKrB,EAALM,MAClBU,EAAA3B,GAAS4B,OAAOK,QACd,sBAAqCH,OAAflB,EAAS,QAAYkB,OAANE,EAAM,M,MAGhDd,OAAOb,EAAMc,QAAUH,EAAI,GAAKE,OAAOZ,EAAKa,O,EAxBjDV,EAAIyB,iBAIJ,IAAK,IAAIC,EAAI,EAAGA,GAAK5B,EAAOY,MAAOgB,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delay = form[0];\nconst step = form[1];\nconst amount = form[2];\n// const submitBtn = form[3];\n\nform.addEventListener('submit', onSubmit);\n\nfunction createPromise({ position, delay }) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((res, rej) => {\n    if (shouldResolve) {\n      // Fulfill\n      res({ position, delay });\n    } else {\n      // Reject\n      rej({ position, delay });\n    }\n  });\n  return promise;\n}\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  // console.log('click');\n  // console.log(delay.value);\n  // console.log(step.value);\n  for (let i = 1; i <= amount.value; i += 1) {\n    setTimeout(() => {\n      const params = {\n        position: i,\n        delay: Number(delay.value) + (i - 1) * Number(step.value),\n      };\n      // console.log(params);\n      // createPromise(params);\n      // console.log(createPromise(params));\n      createPromise(params)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }, Number(delay.value) + (i - 1) * Number(step.value));\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","addEventListener","evt","setTimeout","param","position","delay1","shouldResolve","params","i","delay","Number","value","Math","random","Promise","res","rej","then","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure","preventDefault","i1","_loop"],"version":3,"file":"03-promises.42c2aff9.js.map"}